
#include "inc/lm3s8962.h"
// for IO functions;
#include "stdio.h"
// for 32 bit integers;
#include <stdint.h>
// drivers;
#include "inc/hw_types.h"
#include "driverlib/debug.h"
#include "driverlib/sysctl.h"
#include "drivers/rit128x96x4.h"

extern void CPUcpsid();
extern void CPUcpsie();

void LED_init();
void ADC_init();
void timer0_init();
void timer1_init();


int main(void) {
    //
    // Set the clocking to run directly from the crystal.
    //
    SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC | SYSCTL_OSC_MAIN |
                   SYSCTL_XTAL_8MHZ);
    LED_init();
    ADC_init();
    timer0_init();
    timer1_init();
    
    while(1){
    }
}

// initialize the LED
void LED_init() {
    //
    // clock port F
    //
    SYSCTL_RCGC2_R |= 0x00000020;
    
    // sets the 0th bit of the regester to be an output pin
    GPIO_PORTF_DIR_R &= 0xFFFFFF00;
    GPIO_PORTF_DIR_R |= 0x00000001;
    
    //Disable other functions by settinng all bits except 7th bit to 0 
    GPIO_PORTF_AFSEL_R &= 0xFFFFFF80;
    
    // enable the 0th bit in the digital enable regester
    GPIO_PORTF_DEN_R &= 0xFFFFFF00;
    GPIO_PORTF_DEN_R |= 0x00000001;
    
    // Turn on the LED.
    //GPIO_PORTF_DATA_R &= 0xFFFFFFFC;
    //GPIO_PORTF_DATA_R |= 0x00000001;
}

void timer0_init(){
        CPUcpsid();
	SYSCTL_RCGC1_R |= 0x00010000;
        TIMER0_CTL_R &= 0xFFFFFEFE;                  // disable timerA and timerB
	TIMER0_CFG_R |= TIMER_CFG_32_BIT_TIMER;
	TIMER0_TAMR_R |=  TIMER_TAMR_TAMR_PERIOD;
        TIMER0_TAILR_R &= 0x00;                // set timer to count down from 4
        TIMER0_TAILR_R |= 0x000FFFFF;
	TIMER0_IMR_R |= 0x01;                  // enables timeout interrupts
        // enable debug stall
        TIMER0_CTL_R |= TIMER_CTL_TASTALL;                 
        NVIC_EN0_R = NVIC_EN0_INT19;
        CPUcpsie();
	//Tell core to trigger timer0 interrupt
        // enables timerA
        TIMER0_CTL_R |= 0x01; 
}


void timer1_init(){
        CPUcpsid();
	SYSCTL_RCGC1_R |= 0x00020000;
        TIMER1_CTL_R &= 0xFFFFFEFE;                  // disable timerA and timerB
	TIMER1_CFG_R |= TIMER_CFG_32_BIT_TIMER;
	TIMER1_TAMR_R |=  TIMER_TAMR_TAMR_PERIOD;
        TIMER1_TAILR_R &= 0x00;                // set timer to count down from 4
        TIMER1_TAILR_R |= 0x00FFFFFF;
	TIMER1_IMR_R |= 0x01;                  // enables timeout interrupts
        // enable debug stall
        TIMER1_CTL_R |= TIMER_CTL_TASTALL;                 
        NVIC_EN0_R = NVIC_EN0_INT21;
        CPUcpsie();
	//Tell core to trigger timer0 interrupt
        // enables timerA
        TIMER1_CTL_R |= 0x01; 
}


void ADC_init() {
    int i = 0;
    SYSCTL_RCGC0_R |= SYSCTL_RCGC0_ADC;
    for (i = 0; i < 500; i++);
    ADC0_ACTSS_R |= ADC_ACTSS_ASEN0;
    for (i = 0; i < 500; i++);
}